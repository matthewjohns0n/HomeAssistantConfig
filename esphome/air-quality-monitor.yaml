esphome:
  name: air-quality-monitor

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret aqm_esp_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Air Quality Monitor Fallback Hotspot"
    password: !secret aqm_esp_ap_fallback_password

captive_portal:

i2c:
  sda: 4
  scl: 5
  scan: True

sensor:
  # Gas sensor (SPG30)
  - platform: sgp30
    eco2:
      name: "SPG30 eCO2"
      accuracy_decimals: 1
      id: spg30_eco2
    tvoc:
      name: "SPG30 TVOC"
      accuracy_decimals: 1
      id: spg30_tvoc
    store_baseline: yes
    address: 0x58
    update_interval: 1s
    compensation:
      temperature_source: "bme680_temperature"
      humidity_source: "bme680_humidity"

  # Temp, Pressure, Humidity, Gas Resistance (BME680)
  - platform: bme680
    temperature:
      name: "BME680 Temperature"
      oversampling: 16x
      id: bme680_temperature
    pressure:
      name: "BME680 Pressure"
      id: bme680_pressure
    humidity:
      name: "BME680 Humidity"
      id: bme680_humidity
    gas_resistance:
      name: "BME680 Gas Resistance"
      id: bme680_gas_resistance
    address: 0x77
    update_interval: 30s

  # # Temp, Pressure, Humidity (BME280)
  # - platform: bme280
  #   temperature:
  #     name: "BME280 Temperature"
  #     id: bme280_temperature
  #   pressure:
  #     name: "BME280 Pressure"
  #     id: bme280_pressure
  #   humidity:
  #     name: "BME280 Relative Humidity"
  #     id: bme280_humidity
  #   address: 0x77
  #   update_interval: 15s

  # - platform: template
  #   name: "Equivalent sea level pressure"
  #   lambda: |-
  #     const float STANDARD_ALTITUDE = 0.6; // in meters, see note
  #     return id(bme280_pressure).state / powf(1 - ((0.0065 * STANDARD_ALTITUDE) /
  #       (id(bme280_temperature).state + (0.0065 * STANDARD_ALTITUDE) + 273.15)), 5.257); // in hPa
  #   update_interval: 15s
  #   unit_of_measurement: 'hPa'