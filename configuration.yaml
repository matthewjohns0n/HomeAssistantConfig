# How to split up config:
# https://siytek.com/how-to-split-home-assistant-configuration/

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Includes
automation manual:     !include_dir_merge_list config/automations/
binary_sensor:         !include_dir_merge_list config/binary_sensors/
group:                 !include_dir_merge_list config/groups/
scene:                 !include_dir_merge_list config/scenes/
script:                !include_dir_merge_named config/scripts/
sensor:                !include_dir_merge_list config/sensors/
switch:                !include_dir_merge_list config/switch/
template:              !include_dir_merge_list config/template/

# Customize home assistant
homeassistant:
  customize: !include config/customize.yaml

# Single file includes
climate: !include config/climate.yaml
number: !include config/numbers.yaml

# Include config settings:
tts: !include config/settings/tts.yaml
influxdb: !include config/settings/influxdb.yaml

# For Automations I create in the UI
automation ui: !include automations.yaml

light:
  - platform: template
    lights:
      bed_light_matt:
        value_template: >-
          {% if is_state('light.light_1', 'on') %}
            on
          {% elif is_state('light.light_1', 'off') %}
            off
          {% else %}
            unknown
          {% endif %}
        turn_on:
          service: light.turn_on
          data:
            entity_id: light.light_1
        turn_off:
          service: light.turn_off
          data:
            entity_id: light.light_1
        level_template: >
          {% set realLightBrightness = state_attr('light.light_1', 'brightness') | float %}
          {{ ((38.15 - realLightBrightness) / -0.8504) | int }}
        set_level:
          service: light.turn_on
          data_template:
            entity_id: light.light_1
            brightness: "{{ (0.8504 * brightness + 38.15) | int }}"
      bed_light_chelsea:
        value_template: >-
          {% if is_state('light.light_2', 'on') %}
            on
          {% elif is_state('light.light_2', 'off') %}
            off
          {% else %}
            unknown
          {% endif %}
        turn_on:
          service: light.turn_on
          data:
            entity_id: light.light_2
        turn_off:
          service: light.turn_off
          data:
            entity_id: light.light_2
        level_template: >
          {% set realLightBrightness = state_attr('light.light_2', 'brightness') | float %}
          {{ ((38.15 - realLightBrightness) / -0.8504) | int }}
        set_level:
          service: light.turn_on
          data_template:
            entity_id: light.light_2
            brightness: "{{ (0.8504 * brightness + 38.15) | int }}"
      hallway_light:
        value_template: >-
          {% if is_state('light.light_3', 'on') %}
            on
          {% elif is_state('light.light_3', 'off') %}
            off
          {% else %}
            unknown
          {% endif %}
        turn_on:
          service: light.turn_on
          data:
            entity_id: light.light_3
        turn_off:
          service: light.turn_off
          data:
            entity_id: light.light_3
        level_template: >
          {% set realLightBrightness = state_attr('light.light_3', 'brightness') | float %}
          {{ ((38.15 - realLightBrightness) / -0.8504) | int }}
        set_level:
          service: light.turn_on
          data_template:
            entity_id: light.light_3
            brightness: "{{ (0.8504 * brightness + 38.15) | int }}"